{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"src/app/services/solicitud.service\";\nimport * as i3 from \"@angular/common\";\nfunction SolicitudComponent_li_31_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const cuota_r1 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate4(\" ID: \", cuota_r1.id, \", Cuota Capital: \", cuota_r1.cuotaCapital, \", Cuota Interes: \", cuota_r1.cuotaInteres, \", Cuota Total: \", cuota_r1.cuotaTotal, \" \");\n  }\n}\nexport class SolicitudComponent {\n  constructor(formBuilder, solicitudServices) {\n    this.formBuilder = formBuilder;\n    this.solicitudServices = solicitudServices;\n    this.cuotas = [];\n    this.signUpForm = this.formBuilder.group({\n      cedula: ['', Validators.required],\n      nombre: ['', Validators.required],\n      correo: ['', Validators.required],\n      monto: [0, [Validators.required, Validators.min(0)]],\n      meses: [0, [Validators.required, Validators.min(0)]]\n    });\n  }\n  onSubmit() {\n    if (this.signUpForm.valid) {\n      const solicitud = this.signUpForm.value;\n      this.solicitudServices.agregarSolicitud(solicitud).subscribe(cuotas => {\n        this.cuotas = cuotas;\n        console.log('Registro exitoso', cuotas);\n        // Aquí puedes hacer algo con la lista de cuotas, como mostrarla en la UI\n      }, error => {\n        console.error('Error al registrar el cliente', error);\n        // Aquí manejas errores, como mostrar un mensaje al usuario\n      });\n    }\n  }\n  static #_ = this.ɵfac = function SolicitudComponent_Factory(t) {\n    return new (t || SolicitudComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.SolicitudService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: SolicitudComponent,\n    selectors: [[\"app-solicitud\"]],\n    decls: 32,\n    vars: 3,\n    consts: [[1, \"signup-container\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"form-group\"], [\"for\", \"cedula\"], [\"id\", \"cedula\", \"formControlName\", \"cedula\", \"type\", \"text\", \"placeholder\", \"Cedula\", \"required\", \"\"], [\"for\", \"nombre\"], [\"id\", \"nombre\", \"formControlName\", \"nombre\", \"type\", \"text\", \"placeholder\", \"Nombre\", \"required\", \"\"], [\"for\", \"correo\"], [\"id\", \"correo\", \"formControlName\", \"correo\", \"type\", \"text\", \"placeholder\", \"Correo\", \"required\", \"\"], [\"for\", \"monto\"], [\"id\", \"monto\", \"formControlName\", \"monto\", \"type\", \"number\", \"placeholder\", \"Monto\", \"required\", \"\"], [\"for\", \"meses\"], [\"id\", \"meses\", \"formControlName\", \"meses\", \"type\", \"number\", \"placeholder\", \"Meses\", \"required\", \"\"], [1, \"form-actions\"], [\"type\", \"submit\", 3, \"disabled\"], [4, \"ngFor\", \"ngForOf\"]],\n    template: function SolicitudComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"h2\");\n        i0.ɵɵtext(2, \"Solicitud\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"form\", 1);\n        i0.ɵɵlistener(\"ngSubmit\", function SolicitudComponent_Template_form_ngSubmit_3_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵelementStart(4, \"div\", 2)(5, \"label\", 3);\n        i0.ɵɵtext(6, \"Cedula:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(7, \"input\", 4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"div\", 2)(9, \"label\", 5);\n        i0.ɵɵtext(10, \"Nombre:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(11, \"input\", 6);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(12, \"div\", 2)(13, \"label\", 7);\n        i0.ɵɵtext(14, \"Correo:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(15, \"input\", 8);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(16, \"div\", 2)(17, \"label\", 9);\n        i0.ɵɵtext(18, \"Monto:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(19, \"input\", 10);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(20, \"div\", 2)(21, \"label\", 11);\n        i0.ɵɵtext(22, \"Meses:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(23, \"input\", 12);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(24, \"div\", 13)(25, \"button\", 14);\n        i0.ɵɵtext(26, \"Registrarse\");\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵelementStart(27, \"div\")(28, \"h2\");\n        i0.ɵɵtext(29, \"Lista de Cuotas\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(30, \"ul\");\n        i0.ɵɵtemplate(31, SolicitudComponent_li_31_Template, 2, 4, \"li\", 15);\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"formGroup\", ctx.signUpForm);\n        i0.ɵɵadvance(22);\n        i0.ɵɵproperty(\"disabled\", !ctx.signUpForm.valid);\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngForOf\", ctx.cuotas);\n      }\n    },\n    dependencies: [i3.NgForOf, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NumberValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.RequiredValidator, i1.FormGroupDirective, i1.FormControlName],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["Validators","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate4","cuota_r1","id","cuotaCapital","cuotaInteres","cuotaTotal","SolicitudComponent","constructor","formBuilder","solicitudServices","cuotas","signUpForm","group","cedula","required","nombre","correo","monto","min","meses","onSubmit","valid","solicitud","value","agregarSolicitud","subscribe","console","log","error","_","ɵɵdirectiveInject","i1","FormBuilder","i2","SolicitudService","_2","selectors","decls","vars","consts","template","SolicitudComponent_Template","rf","ctx","ɵɵlistener","SolicitudComponent_Template_form_ngSubmit_3_listener","ɵɵelement","ɵɵtemplate","SolicitudComponent_li_31_Template","ɵɵproperty"],"sources":["C:\\Users\\ROG ZEPHYRUS\\Documents\\GitHub\\angularexamen63\\angularexamen63Bravo\\src\\app\\pages\\solicitud\\solicitud.component.ts","C:\\Users\\ROG ZEPHYRUS\\Documents\\GitHub\\angularexamen63\\angularexamen63Bravo\\src\\app\\pages\\solicitud\\solicitud.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Cuota } from 'src/app/domain/cuota';\nimport { Solicitud } from 'src/app/domain/solicitud';\nimport { SolicitudService } from 'src/app/services/solicitud.service';\n\n@Component({\n  selector: 'app-solicitud',\n  templateUrl: './solicitud.component.html',\n  styleUrls: ['./solicitud.component.css']\n})\nexport class SolicitudComponent {\n  signUpForm: FormGroup;\n  cuotas: Cuota[] = [];\n\n  constructor(private formBuilder: FormBuilder, private solicitudServices: SolicitudService){\n    this.signUpForm = this.formBuilder.group({\n      cedula: ['', Validators.required],\n      nombre: ['', Validators.required],\n      correo: ['', Validators.required],\n      monto: [0, [Validators.required, Validators.min(0)]],\n      meses: [0, [Validators.required, Validators.min(0)]]\n    });\n  }\n\n  onSubmit() {\n    if (this.signUpForm.valid) {\n      const solicitud: Solicitud = this.signUpForm.value;\n      this.solicitudServices.agregarSolicitud(solicitud).subscribe(\n        (cuotas: Cuota[]) => { // Ajusta el tipo de respuesta esperada a Cuota[]\n          this.cuotas = cuotas;\n          console.log('Registro exitoso', cuotas);\n          // Aquí puedes hacer algo con la lista de cuotas, como mostrarla en la UI\n        },\n        error => {\n          console.error('Error al registrar el cliente', error);\n          // Aquí manejas errores, como mostrar un mensaje al usuario\n        }\n      );\n    }\n  }\n\n}\n","<div class=\"signup-container\">\n    <h2>Solicitud</h2>\n    <form [formGroup]=\"signUpForm\" (ngSubmit)=\"onSubmit()\">\n      <div class=\"form-group\">\n        <label for=\"cedula\">Cedula:</label>\n        <input id=\"cedula\" formControlName=\"cedula\" type=\"text\" placeholder=\"Cedula\" required>\n      </div>\n      <div class=\"form-group\">\n        <label for=\"nombre\">Nombre:</label>\n        <input id=\"nombre\" formControlName=\"nombre\" type=\"text\" placeholder=\"Nombre\" required>\n      </div>\n      <div class=\"form-group\">\n        <label for=\"correo\">Correo:</label>\n        <input id=\"correo\" formControlName=\"correo\" type=\"text\" placeholder=\"Correo\" required>\n      </div>\n      <div class=\"form-group\">\n        <label for=\"monto\">Monto:</label>\n        <input id=\"monto\" formControlName=\"monto\" type=\"number\" placeholder=\"Monto\" required>\n      </div>\n      <div class=\"form-group\">\n        <label for=\"meses\">Meses:</label>\n        <input id=\"meses\" formControlName=\"meses\" type=\"number\" placeholder=\"Meses\" required>\n      </div>\n      <div class=\"form-actions\">\n        <button type=\"submit\" [disabled]=\"!signUpForm.valid\">Registrarse</button>\n      </div>\n    </form>\n  </div>\n\n  <div>\n  <h2>Lista de Cuotas</h2>\n  <ul>\n    <li *ngFor=\"let cuota of cuotas\">\n      ID: {{cuota.id}}, Cuota Capital: {{ cuota.cuotaCapital }}, Cuota Interes: {{ cuota.cuotaInteres}}, Cuota Total: {{cuota.cuotaTotal}}\n      <!-- Utiliza otros campos de tu objeto Cuota según sea necesario -->\n    </li>\n  </ul>\n</div>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}